version: "3.9"

x-healthcheck: &healthcheck
  interval: 10s
  timeout: 5s
  retries: 12

x-restart: &restart
  restart: unless-stopped

x-resources: &resources
  deploy:
    resources:
      limits:
        memory: 512M
      reservations:
        memory: 256M

services:
  postgres:
    image: postgres:17.5
    environment:
      - POSTGRES_DB=${POSTGRES_DB:?}
      - POSTGRES_USER=${POSTGRES_USER:?}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      <<: *healthcheck
    <<: [*restart, *resources]

  # flyway:
  #   image: flyway/flyway:10
  #   command: -url=jdbc:postgresql://postgres:5432/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} -connectRetries=60 migrate
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   profiles: ["migrations"]

  api-gateway:
    build:
      context: ..
      dockerfile: api-gateway/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=json
      - HTTP_ADDR=:8080
      - METRICS_ADDR=:9090
      - SERVICE_NAME=api-gateway
      - AUTH_GRPC_ADDR=auth:9101
      - CONTENT_GRPC_ADDR=content:9102
      - MEDIA_GRPC_ADDR=media:9103
      - CONTACT_GRPC_ADDR=contact:9104
      - CORS_ALLOW_ORIGINS=${CORS_ALLOW_ORIGINS:-*}
      - DATABASE_URL=${DATABASE_URL:?} # format: postgres://USER:PASSWORD@HOST:PORT/DB?sslmode=disable
    ports:
      - "8080:8080"
      - "9090:9090"
    depends_on:
      auth:
        condition: service_healthy
      content:
        condition: service_healthy
      media:
        condition: service_healthy
      contact:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      <<: *healthcheck
    <<: [*restart, *resources]

  auth:
    build:
      context: ..
      dockerfile: services/auth/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    environment:
      - SERVICE_NAME=auth
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=json
      - GRPC_ADDR=:9101
      - HTTP_ADDR=:8101
      - METRICS_ADDR=:9100
      - DATABASE_URL=${DATABASE_URL:?}
      - JWT_KID=${JWT_KID:-prod}
      - JWT_PRIVATE_PEM=${JWT_PRIVATE_PEM}
      - JWT_PUBLIC_PEM=${JWT_PUBLIC_PEM}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8101/health"]
      <<: *healthcheck
    <<: [*restart, *resources]

  content:
    build:
      context: ..
      dockerfile: services/content/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    environment:
      - SERVICE_NAME=content
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=json
      - GRPC_ADDR=:9102
      - HTTP_ADDR=:8102
      - METRICS_ADDR=:9100
      - DATABASE_URL=${DATABASE_URL:?}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8102/health"]
      <<: *healthcheck
    <<: [*restart, *resources]

  media:
    build:
      context: ..
      dockerfile: services/media/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    environment:
      - SERVICE_NAME=media
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=json
      - GRPC_ADDR=:9103
      - HTTP_ADDR=:8103
      - METRICS_ADDR=:9100
      - DATABASE_URL=${DATABASE_URL:?}
      - STORAGE_DIR=/data/media
    volumes:
      - media_data:/data/media
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8103/health"]
      <<: *healthcheck
    <<: [*restart, *resources]

  contact:
    build:
      context: ..
      dockerfile: services/contact/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    environment:
      - SERVICE_NAME=contact
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=json
      - GRPC_ADDR=:9104
      - HTTP_ADDR=:8104
      - METRICS_ADDR=:9100
      - DATABASE_URL=${DATABASE_URL:?}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER:-log}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8104/health"]
      <<: *healthcheck
    <<: [*restart, *resources]

volumes:
  media_data: {}
  postgres_data: {}