syntax = "proto3";

package auth.v1;

option go_package = "github.com/saas-startup-platform/backend/gen/auth/v1;authv1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// Authentication service
service AuthService {
  // Login with email and password
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
  }

  // Validate a JWT token
  rpc ValidateToken(ValidateTokenRequest) returns (User) {
    option (google.api.http) = {
      post: "/api/v1/auth/validate"
      body: "*"
    };
  }

  // Refresh an access token
  rpc RefreshToken(RefreshTokenRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/refresh"
      body: "*"
    };
  }

  // Logout (invalidate tokens)
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/logout"
      body: "*"
    };
  }
}

// User represents a system user
message User {
  string id = 1;
  string email = 2;
  UserRole role = 3;
  UserProfile profile = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp last_login = 6;
}

// User profile information
message UserProfile {
  string name = 1;
  string avatar = 2;
}

// User role enumeration
enum UserRole {
  USER_ROLE_UNSPECIFIED = 0;
  USER_ROLE_ADMIN = 1;
  USER_ROLE_EDITOR = 2;
}

// Request and response messages
message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;
  int64 expires_in = 4;
}

message ValidateTokenRequest {
  string token = 1;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message LogoutRequest {
  string token = 1;
}

message LogoutResponse {
  bool success = 1;
}