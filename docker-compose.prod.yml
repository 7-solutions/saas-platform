services:
  # CouchDB Database
  couchdb:
    image: couchdb:3.3
    container_name: saas-couchdb-prod
    environment:
      - COUCHDB_USER=${COUCHDB_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    ports:
      - "5984:5984"
    volumes:
      - couchdb_data:/opt/couchdb/data
      - ./scripts/couchdb:/opt/couchdb/etc/local.d
    networks:
      - saas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5984/_up"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: saas-backend-prod
    environment:
      - COUCHDB_URL=http://couchdb:5984
      - COUCHDB_USER=${COUCHDB_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=8080
      - METRICS_PORT=8081
      - ALERT_WEBHOOK_URL=${ALERT_WEBHOOK_URL}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - APP_VERSION=${APP_VERSION:-1.0.0}
    ports:
      - "8080:8080"
      - "9090:9090"  # gRPC port
      - "8081:8081"  # Metrics port
    depends_on:
      couchdb:
        condition: service_healthy
    networks:
      - saas-network
    restart: unless-stopped

  # Public Website (Next.js)
  website:
    build:
      context: .
      dockerfile: ./apps/website/Dockerfile
    container_name: saas-website-prod
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8080}
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - saas-network
    restart: unless-stopped

  # CMS Dashboard (Next.js)
  cms:
    build:
      context: .
      dockerfile: ./apps/cms/Dockerfile
    container_name: saas-cms-prod
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8080}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NODE_ENV=production
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - saas-network
    restart: unless-stopped

volumes:
  couchdb_data:

networks:
  saas-network:
    driver: bridge