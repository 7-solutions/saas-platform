# Optimized Development Dockerfile for Website
FROM node:22-alpine AS development

# Install minimal system dependencies for development
RUN apk add --no-cache \
    libc6-compat \
    dumb-init && \
    # Enable corepack and prepare pnpm
    corepack enable && \
    corepack prepare pnpm@9.15.0 --activate

# Set working directory
WORKDIR /app

# Copy package configuration files for optimal caching
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/website/package.json ./apps/website/
COPY packages/ui/package.json ./packages/ui/
COPY packages/shared/package.json ./packages/shared/

# Install dependencies with enhanced caching
RUN --mount=type=cache,id=pnpm-store-dev,target=/root/.local/share/pnpm/store \
    --mount=type=cache,id=pnpm-metadata-dev,target=/root/.cache/pnpm \
    pnpm install --frozen-lockfile --prefer-offline

# Copy source code
COPY . .

# Expose port
EXPOSE 3000

# Development environment variables
ENV NODE_ENV=development \
    NEXT_TELEMETRY_DISABLED=1

# Use dumb-init for proper signal handling in development
ENTRYPOINT ["dumb-init", "--"]

# Start development server with hot reload
CMD ["pnpm", "--filter", "@saas-platform/website", "dev"]